import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

// üîπ Interface Room ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏±‡∏Å
interface Room {
    void bookRoom();
    double getPrice();
    String getRoomType();
}

// üîπ ‡∏Ñ‡∏•‡∏≤‡∏™‡∏•‡∏π‡∏Å‡∏ó‡∏µ‡πà Implement Room
class StandardRoom implements Room {
    private int roomNumber;
    public StandardRoom(int roomNumber) { this.roomNumber = roomNumber; }
    @Override public void bookRoom() { System.out.println("‚úÖ ‡∏à‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á Standard ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç " + roomNumber + " ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"); }
    @Override public double getPrice() { return 1000; }
    @Override public String getRoomType() { return "Standard"; }
}

class DeluxeRoom implements Room {
    private int roomNumber;
    public DeluxeRoom(int roomNumber) { this.roomNumber = roomNumber; }
    @Override public void bookRoom() { System.out.println("‚úÖ ‡∏à‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á Deluxe ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç " + roomNumber + " ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"); }
    @Override public double getPrice() { return 2000; }
    @Override public String getRoomType() { return "Deluxe"; }
}

class SuiteRoom implements Room {
    private int roomNumber;
    public SuiteRoom(int roomNumber) { this.roomNumber = roomNumber; }
    @Override public void bookRoom() { System.out.println("‚úÖ ‡∏à‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á Suite ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç " + roomNumber + " ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"); }
    @Override public double getPrice() { return 5000; }
    @Override public String getRoomType() { return "Suite"; }
}

// üîπ ‡∏Ñ‡∏•‡∏≤‡∏™‡πÅ‡∏°‡πà Payment
abstract class Payment {
    protected double amount;
    public Payment(double amount) { this.amount = amount; }
    public abstract void processPayment();
    @Override public String toString() { return "üí∞ ‡∏¢‡∏≠‡∏î‡∏ä‡∏≥‡∏£‡∏∞: " + amount + " ‡∏ö‡∏≤‡∏ó"; }
}

// üîπ ‡∏Ñ‡∏•‡∏≤‡∏™‡∏•‡∏π‡∏Å‡∏Ç‡∏≠‡∏á Payment
class CashPayment extends Payment {
    public CashPayment(double amount) { super(amount); }
    @Override public void processPayment() { System.out.println("üíµ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î: " + amount + " ‡∏ö‡∏≤‡∏ó ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß"); }
}

class CreditCardPayment extends Payment {
    private String cardNumber;
    public CreditCardPayment(double amount, String cardNumber) { super(amount); this.cardNumber = cardNumber; }
    @Override public void processPayment() {
        System.out.println("üí≥ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï (xxxx-xxxx-xxxx-" + cardNumber.substring(cardNumber.length() - 4) + "): " + amount + " ‡∏ö‡∏≤‡∏ó ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
    }
    @Override public String toString() { return super.toString() + "\nüí≥ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ä‡∏≥‡∏£‡∏∞: ‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï (xxxx-xxxx-xxxx-" + cardNumber.substring(cardNumber.length() - 4) + ")"; }
}

class EWalletPayment extends Payment {
    private String walletName;
    public EWalletPayment(double amount, String walletName) { super(amount); this.walletName = walletName; }
    @Override public void processPayment() { System.out.println("üì≤ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏î‡πâ‡∏ß‡∏¢ " + walletName + ": " + amount + " ‡∏ö‡∏≤‡∏ó ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß"); }
    @Override public String toString() { return super.toString() + "\nüì≤ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ä‡∏≥‡∏£‡∏∞: " + walletName; }
}

// üîπ ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏≠‡∏á‡πÇ‡∏£‡∏á‡πÅ‡∏£‡∏°
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        List<Room> bookedRooms = new ArrayList<>();
        int roomCounter = 100; // ‡πÉ‡∏ä‡πâ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏´‡πâ‡∏≠‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥

        while (true) {
            // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡πâ‡∏≠‡∏á
            System.out.println("\nüìå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏´‡πâ‡∏≠‡∏á (‡∏õ‡πâ‡∏≠‡∏ô‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç):");
            System.out.println("1. Standard (1,000 ‡∏ö‡∏≤‡∏ó)");
            System.out.println("2. Deluxe (2,000 ‡∏ö‡∏≤‡∏ó)");
            System.out.println("3. Suite (5,000 ‡∏ö‡∏≤‡∏ó)");
            System.out.println("0. ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡πâ‡∏≠‡∏á");
            System.out.print("üëâ ‡∏õ‡πâ‡∏≠‡∏ô‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£: ");
            int choice = scanner.nextInt();

            if (choice == 0) break;

            Room room = null;
            switch (choice) {
                case 1: room = new StandardRoom(++roomCounter); break;
                case 2: room = new DeluxeRoom(++roomCounter); break;
                case 3: room = new SuiteRoom(++roomCounter); break;
                default:
                    System.out.println("‚ùå ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
                    continue;
            }

            bookedRooms.add(room);
            room.bookRoom();
        }

        if (bookedRooms.isEmpty()) {
            System.out.println("‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡πâ‡∏≠‡∏á!");
            return;
        }

        // ‚úÖ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°
        double totalPrice = 0;
        System.out.println("\nüìã ‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏à‡∏≠‡∏á:");
        for (Room room : bookedRooms) {
            System.out.println("- " + room.getRoomType() + " ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç " + roomCounter + " (" + room.getPrice() + " ‡∏ö‡∏≤‡∏ó)");
            totalPrice += room.getPrice();
        }
        System.out.println("\nüí∞ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡∏≥‡∏£‡∏∞: " + totalPrice + " ‡∏ö‡∏≤‡∏ó");

        // ‚úÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
        System.out.println("\nüí∞ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô:");
        System.out.println("1. ‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î");
        System.out.println("2. ‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï");
        System.out.println("3. e-Wallet");
        System.out.print("üëâ ‡∏õ‡πâ‡∏≠‡∏ô‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£: ");
        int paymentMethod = scanner.nextInt();
        scanner.nextLine(); // Handle newline

        Payment payment = null;
        switch (paymentMethod) {
            case 1:
                payment = new CashPayment(totalPrice);
                break;
            case 2:
                System.out.print("üí≥ ‡∏õ‡πâ‡∏≠‡∏ô‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï (16 ‡∏´‡∏•‡∏±‡∏Å): ");
                String cardNumber = scanner.nextLine();
                payment = new CreditCardPayment(totalPrice, cardNumber);
                break;
            case 3:
                System.out.print("üì≤ ‡∏õ‡πâ‡∏≠‡∏ô‡∏ä‡∏∑‡πà‡∏≠ e-Wallet: ");
                String walletName = scanner.nextLine();
                payment = new EWalletPayment(totalPrice, walletName);
                break;
            default:
                System.out.println("‚ùå ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
                return;
        }

        // ‚úÖ ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
        payment.processPayment();
        System.out.println(payment);

        scanner.close();
    }
}
